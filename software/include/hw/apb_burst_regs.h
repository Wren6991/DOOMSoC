/*******************************************************************************
*                          AUTOGENERATED BY REGBLOCK                           *
*                            Do not edit manually.                             *
*          Edit the source file (or regblock utility) and regenerate.          *
*******************************************************************************/

#ifndef _APB_BURST_REGS_H_
#define _APB_BURST_REGS_H_

// Block name           : apb_burst
// Bus type             : apb
// Bus data width       : 32
// Bus address width    : 16

#define APB_BURST_CSR_OFFS 0
#define APB_BURST_ADDR_OFFS 4
#define APB_BURST_DATA0_OFFS 8
#define APB_BURST_DATA1_OFFS 12
#define APB_BURST_DATA2_OFFS 16
#define APB_BURST_DATA3_OFFS 20

/*******************************************************************************
*                                     CSR                                      *
*******************************************************************************/

// Control and status register

// Field: CSR_READY  Access: ROV
// If 1, indicates the most recent command has completed. Read data will be
// available in DATA registers.
#define APB_BURST_CSR_READY_LSB  0
#define APB_BURST_CSR_READY_BITS 1
#define APB_BURST_CSR_READY_MASK 0x1
// Field: CSR_READ  Access: SC
// Write 1 to start a read cycle.
#define APB_BURST_CSR_READ_LSB  1
#define APB_BURST_CSR_READ_BITS 1
#define APB_BURST_CSR_READ_MASK 0x2
// Field: CSR_WRITE  Access: SC
// Write 1 to start a write cycle.
#define APB_BURST_CSR_WRITE_LSB  2
#define APB_BURST_CSR_WRITE_BITS 1
#define APB_BURST_CSR_WRITE_MASK 0x4

/*******************************************************************************
*                                     ADDR                                     *
*******************************************************************************/

// Address of first beat in WRAP4 burst

// Field: ADDR  Access: RW
#define APB_BURST_ADDR_LSB  0
#define APB_BURST_ADDR_BITS 32
#define APB_BURST_ADDR_MASK 0xffffffff

/*******************************************************************************
*                                    DATA0                                     *
*******************************************************************************/

// Data for/from first beat of WRAP4 burst

// Field: DATA0  Access: RWF
#define APB_BURST_DATA0_LSB  0
#define APB_BURST_DATA0_BITS 32
#define APB_BURST_DATA0_MASK 0xffffffff

/*******************************************************************************
*                                    DATA1                                     *
*******************************************************************************/

// Data for/from second beat of WRAP4 burst

// Field: DATA1  Access: RWF
#define APB_BURST_DATA1_LSB  0
#define APB_BURST_DATA1_BITS 32
#define APB_BURST_DATA1_MASK 0xffffffff

/*******************************************************************************
*                                    DATA2                                     *
*******************************************************************************/

// Data for/from third beat of WRAP4 burst

// Field: DATA2  Access: RWF
#define APB_BURST_DATA2_LSB  0
#define APB_BURST_DATA2_BITS 32
#define APB_BURST_DATA2_MASK 0xffffffff

/*******************************************************************************
*                                    DATA3                                     *
*******************************************************************************/

// Data for/from fourth beat of WRAP4 burst

// Field: DATA3  Access: RWF
#define APB_BURST_DATA3_LSB  0
#define APB_BURST_DATA3_BITS 32
#define APB_BURST_DATA3_MASK 0xffffffff

#endif // _APB_BURST_REGS_H_
